/*! modernizr 3.2.0 (Custom Build) | MIT *
 * http://modernizr.com/download/?-backgroundsize-cssanimations-csstransforms-csstransforms3d-csstransitions-flexbox-inlinesvg-mediaqueries-svg-mq-setclasses !*/
!function (e, t, n) {
	function r(e, t) {
		return typeof e === t
	}

	function s() {
		var e, t, n, s, i, o, a;
		for (var f in w)if (w.hasOwnProperty(f)) {
			if (e = [], t = w[f], t.name && (e.push(t.name.toLowerCase()), t.options && t.options.aliases && t.options.aliases.length))for (n = 0; n < t.options.aliases.length; n++)e.push(t.options.aliases[n].toLowerCase());
			for (s = r(t.fn, "function") ? t.fn() : t.fn, i = 0; i < e.length; i++)o = e[i], a = o.split("."), 1 === a.length ? Modernizr[a[0]] = s : (!Modernizr[a[0]] || Modernizr[a[0]] instanceof Boolean || (Modernizr[a[0]] = new Boolean(Modernizr[a[0]])), Modernizr[a[0]][a[1]] = s), y.push((s ? "" : "no-") + a.join("-"))
		}
	}

	function i(e) {
		var t = C.className, n = Modernizr._config.classPrefix || "";
		if (x && (t = t.baseVal), Modernizr._config.enableJSClass) {
			var r = new RegExp("(^|\\s)" + n + "no-js(\\s|$)");
			t = t.replace(r, "$1" + n + "js$2")
		}
		Modernizr._config.enableClasses && (t += " " + n + e.join(" " + n), x ? C.className.baseVal = t : C.className = t)
	}

	function o() {
		return "function" != typeof t.createElement ? t.createElement(arguments[0]) : x ? t.createElementNS.call(t, "http://www.w3.org/2000/svg", arguments[0]) : t.createElement.apply(t, arguments)
	}

	function a() {
		var e = t.body;
		return e || (e = o(x ? "svg" : "body"), e.fake = !0), e
	}

	function f(e, n, r, s) {
		var i, f, l, u, d = "modernizr", p = o("div"), c = a();
		if (parseInt(r, 10))for (; r--;)l = o("div"), l.id = s ? s[r] : d + (r + 1), p.appendChild(l);
		return i = o("style"), i.type = "text/css", i.id = "s" + d, (c.fake ? c : p).appendChild(i), c.appendChild(p), i.styleSheet ? i.styleSheet.cssText = e : i.appendChild(t.createTextNode(e)), p.id = d, c.fake && (c.style.background = "", c.style.overflow = "hidden", u = C.style.overflow, C.style.overflow = "hidden", C.appendChild(c)), f = n(p, e), c.fake ? (c.parentNode.removeChild(c), C.style.overflow = u, C.offsetHeight) : p.parentNode.removeChild(p), !!f
	}

	function l(e, t) {
		return !!~("" + e).indexOf(t)
	}

	function u(e) {
		return e.replace(/([a-z])-([a-z])/g, function (e, t, n) {
			return t + n.toUpperCase()
		}).replace(/^-/, "")
	}

	function d(e, t) {
		return function () {
			return e.apply(t, arguments)
		}
	}

	function p(e, t, n) {
		var s;
		for (var i in e)if (e[i] in t)return n === !1 ? e[i] : (s = t[e[i]], r(s, "function") ? d(s, n || t) : s);
		return !1
	}

	function c(e) {
		return e.replace(/([A-Z])/g, function (e, t) {
			return "-" + t.toLowerCase()
		}).replace(/^ms-/, "-ms-")
	}

	function m(t, r) {
		var s = t.length;
		if ("CSS" in e && "supports" in e.CSS) {
			for (; s--;)if (e.CSS.supports(c(t[s]), r))return !0;
			return !1
		}
		if ("CSSSupportsRule" in e) {
			for (var i = []; s--;)i.push("(" + c(t[s]) + ":" + r + ")");
			return i = i.join(" or "), f("@supports (" + i + ") { #modernizr { position: absolute; } }", function (e) {
				return "absolute" == getComputedStyle(e, null).position
			})
		}
		return n
	}

	function v(e, t, s, i) {
		function a() {
			d && (delete A.style, delete A.modElem)
		}

		if (i = r(i, "undefined") ? !1 : i, !r(s, "undefined")) {
			var f = m(e, s);
			if (!r(f, "undefined"))return f
		}
		for (var d, p, c, v, g, h = ["modernizr", "tspan"]; !A.style;)d = !0, A.modElem = o(h.shift()), A.style = A.modElem.style;
		for (c = e.length, p = 0; c > p; p++)if (v = e[p], g = A.style[v], l(v, "-") && (v = u(v)), A.style[v] !== n) {
			if (i || r(s, "undefined"))return a(), "pfx" == t ? v : !0;
			try {
				A.style[v] = s
			} catch (y) {
			}
			if (A.style[v] != g)return a(), "pfx" == t ? v : !0
		}
		return a(), !1
	}

	function g(e, t, n, s, i) {
		var o = e.charAt(0).toUpperCase() + e.slice(1), a = (e + " " + N.join(o + " ") + o).split(" ");
		return r(t, "string") || r(t, "undefined") ? v(a, t, s, i) : (a = (e + " " + P.join(o + " ") + o).split(" "), p(a, t, n))
	}

	function h(e, t, r) {
		return g(e, n, n, t, r)
	}

	var y = [], w = [], S = {
		_version: "3.2.0",
		_config: {classPrefix: "", enableClasses: !0, enableJSClass: !0, usePrefixes: !0},
		_q: [],
		on: function (e, t) {
			var n = this;
			setTimeout(function () {
				t(n[e])
			}, 0)
		},
		addTest: function (e, t, n) {
			w.push({name: e, fn: t, options: n})
		},
		addAsyncTest: function (e) {
			w.push({name: null, fn: e})
		}
	}, Modernizr = function () {
	};
	Modernizr.prototype = S, Modernizr = new Modernizr, Modernizr.addTest("svg", !!t.createElementNS && !!t.createElementNS("http://www.w3.org/2000/svg", "svg").createSVGRect);
	var C = t.documentElement, x = "svg" === C.nodeName.toLowerCase(), b = "CSS" in e && "supports" in e.CSS, _ = "supportsCSS" in e;
	Modernizr.addTest("supports", b || _), Modernizr.addTest("inlinesvg", function () {
		var e = o("div");
		return e.innerHTML = "<svg/>", "http://www.w3.org/2000/svg" == ("undefined" != typeof SVGRect && e.firstChild && e.firstChild.namespaceURI)
	});
	var T = function () {
		var t = e.matchMedia || e.msMatchMedia;
		return t ? function (e) {
			var n = t(e);
			return n && n.matches || !1
		} : function (t) {
			var n = !1;
			return f("@media " + t + " { #modernizr { position: absolute; } }", function (t) {
				n = "absolute" == (e.getComputedStyle ? e.getComputedStyle(t, null) : t.currentStyle).position
			}), n
		}
	}();
	S.mq = T, Modernizr.addTest("mediaqueries", T("only all"));
	var z = S.testStyles = f, E = "Moz O ms Webkit", N = S._config.usePrefixes ? E.split(" ") : [];
	S._cssomPrefixes = N;
	var P = S._config.usePrefixes ? E.toLowerCase().split(" ") : [];
	S._domPrefixes = P;
	var k = {elem: o("modernizr")};
	Modernizr._q.push(function () {
		delete k.elem
	});
	var A = {style: k.elem.style};
	Modernizr._q.unshift(function () {
		delete A.style
	}), S.testAllProps = g, S.testAllProps = h, Modernizr.addTest("cssanimations", h("animationName", "a", !0)), Modernizr.addTest("backgroundsize", h("backgroundSize", "100%", !0)), Modernizr.addTest("flexbox", h("flexBasis", "1px", !0)), Modernizr.addTest("csstransforms", function () {
		return -1 === navigator.userAgent.indexOf("Android 2.") && h("transform", "scale(1)", !0)
	}), Modernizr.addTest("csstransforms3d", function () {
		var e = !!h("perspective", "1px", !0), t = Modernizr._config.usePrefixes;
		if (e && (!t || "webkitPerspective" in C.style)) {
			var n, r = "#modernizr{width:0;height:0}";
			Modernizr.supports ? n = "@supports (perspective: 1px)" : (n = "@media (transform-3d)", t && (n += ",(-webkit-transform-3d)")), n += "{#modernizr{width:7px;height:18px;margin:0;padding:0;border:0}}", z(r + n, function (t) {
				e = 7 === t.offsetWidth && 18 === t.offsetHeight
			})
		}
		return e
	}), Modernizr.addTest("csstransitions", h("transition", "all", !0)), s(), i(y), delete S.addTest, delete S.addAsyncTest;
	for (var j = 0; j < Modernizr._q.length; j++)Modernizr._q[j]();
	e.Modernizr = Modernizr
}(window, document);
